<?xml version="1.0" encoding="UTF-8"?>
 
<project name="ICP - Triagem" default="gera.producao">
	 
	<property environment="env"/>
	<property name="pasta.projetos" value="O:/workSpace"/>
	<property name="projeto.principal.nome" value="claro"/>
 	<property name="projeto.principal.diretorio" value="${pasta.projetos}/${projeto.principal.nome}"/>
 	<property name="projeto.principal.dist" value="${projeto.principal.diretorio}/dist"/>
	<property name="projeto.pasta.origem" value="${projeto.principal.dist}/claro_orig"/>
	<property name="projeto.pasta.destino" value="${projeto.principal.dist}/claro_dest"/>
	<property name="diretorio.auxiliar.build" value="${projeto.principal.diretorio}/web/WEB-INF/classes"/>
	<property name="diretorio.biblioteca" value="${projeto.principal.diretorio}/web/WEB-INF/lib"/>

	<property name="sobrescreve" value="true" />
	
	<!--############################################################################################# -->
	<path id="ant.classpath">
		<fileset dir="${diretorio.biblioteca}">
			<include name="**/*.jar"/>
		</fileset>	
	</path>
	
	<target name="gera.producao" depends="constroi.padrao" description="Constrói o arquivo .war para distribuição">
	    <echo message="Deleta o arquivo de distribuição antigo"/>
		<delete file="${projeto.principal.dist}/${projeto.principal.nome}.war"/>
	    <echo message="Cria o arquivo war"/>
		<jar jarfile="${projeto.principal.dist}/${projeto.principal.nome}.war"
			  basedir="${projeto.principal.diretorio}\web"
			  update="true"
			  >
		</jar>
		<jar jarfile="${projeto.principal.dist}/claro.war"
			  basedir="${projeto.principal.diretorio}\web"
			  update="true"
			  >
		</jar>
	</target>

	<target name="compila">
		<!-- Compila o projeto -->  
		<echo message="Compila o projeto "/>
		<javac srcdir="${projeto.principal.diretorio}/src"
			destdir="${diretorio.auxiliar.build}" 
			includeantruntime="false" 
			sourcepath="${projeto.principal.diretorio}/src" 
			debug="true"
			optimize="true"
			verbose="false"
			deprecation="false" >
			<include name="**" />
			<exclude name="**/*.js"/>
		</javac>
	</target>
	
	<!-- Tarefas padrões de criação -->
	<target name="constroi.padrao" depends="compila, manifest.sistema">

		<echo>Copia properties para a distribuição.</echo>
		<copy todir="${diretorio.auxiliar.build}"
			  failonerror="false" 
	    	  overwrite="${sobrescreve}" 
	    	  preservelastmodified="true">
	     	<fileset dir="${projeto.principal.diretorio}/src" includes="**/*.properties"/>
	    </copy>		
		
		<echo>Copia arquivo de configuração do cache.</echo>
		<copy description="Copia o arquivos de configuração do cache" 
			  todir="${diretorio.auxiliar.build}"
			  failonerror="false" 
	    	  overwrite="${sobrescreve}" 
	    	  preservelastmodified="true">
	     	<fileset dir="${projeto.principal.diretorio}/src" includes="**/*.xml"/>
		</copy>
	</target>
	
	<target name="manifest.sistema">
		<tstamp/>
		<echo>Cria arquivo de Manifest.</echo>
		<manifest file="./MANIFEST.MF">
			<attribute name="Built-By" value="${ant.publisher.name}"/>
			<section name="${ant.java.path}">
				<attribute name="Specification-Title"		value="Framework ${projeto.principal.nome}"/>
				<attribute name="Specification-Version"		value="WebObjects ${wo.version}"/>
				<attribute name="Specification-Vendor"		value="${ant.commission.name}"/>
				<attribute name="Implementation-Title"		value="${ant.java.package}"/>
				<attribute name="Implementation-Version"	value="${version} build ${build.number} ${TODAY}"/>
				<attribute name="Implementation-Vendor"		value="${ant.vendor.name}"/>
				<attribute name="Sealed" value="false"/>
			</section>
		</manifest>
	</target>
	
	<target name="clean" description="Limpa os arquivos de build">
		<delete dir="${projeto.pasta.origem}" />
		<delete dir="${projeto.pasta.destino}" />
	</target>
	
	<target name="obfuscador" depends="clean, gera.producao">
		<!-- preparar um diretório temporário no qual o arquivo war é expandido e obfuscado -->
		<mkdir dir="${projeto.pasta.origem}"/>
		<mkdir dir="${projeto.pasta.destino}"/>
		<unwar src="${projeto.principal.dist}/claro.war" dest="${projeto.pasta.origem}"/>
		 
		<!-- criar um jar de classes webapp (exigido pelo yguard) para obfuscar -->
		<jar destfile="${projeto.pasta.origem}/WEB-INF/lib/ant_jarlookup.jar" whenempty="fail">
		    <zipfileset dir="${projeto.pasta.origem}/WEB-INF/classes"/>
		</jar>
		<delete dir="${projeto.pasta.origem}/WEB-INF/classes"/>
		 
		<!--criar um conjunto de arquivos de bibliotecas internas para ser ofuscado -->
		<fileset dir="${projeto.pasta.origem}/WEB-INF/lib" id="internal.lib.set">
		    <include name="ant_jarlookup.jar"/>
		</fileset>
		 
		<move todir="${projeto.pasta.destino}">
		    <fileset refid="internal.lib.set"/>
		</move>
		 
		<!-- craindo um jar da pasta web para obfuscar(requerido pelo yguard) -->
		<jar destfile="${projeto.pasta.destino}/web.xml.jar" whenempty="fail">
		    <zipfileset dir="${projeto.pasta.origem}/WEB-INF" includes="web.xml"/>
		</jar>
		<delete file="${projeto.pasta.origem}/WEB-INF/web.xml"/>
		 
		<!-- criando um fileset de todos os jars que serao obfuscados-->
		<fileset dir="${projeto.pasta.destino}" includes="*.jar" id="in-out.set"/>
		 
		<!-- criando um fileset das bibliotecas remanescentes, nao serao ubfuscadas -->
		<path id="external.lib.path">
		    <fileset dir="${projeto.pasta.origem}/WEB-INF/lib" includes="*.jar"/>
		</path>
		 
		<taskdef name="yguard" classname="com.yworks.yguard.YGuardTask" classpath="${diretorio.biblioteca}/yguard.jar"/>
		 
		<yguard>
		    <inoutpairs>
		        <!-- este fileset sao os input que serão obfuscados -->
		        <fileset refid="in-out.set"/>
		    </inoutpairs>
		    <externalclasses refid="external.lib.path"/>  <!-- external libs, not obfuscated -->
		    <rename>
		        <keep>
		            <package>
		              <patternset>
		                <include name="br.**"/>
		                <include name="img.**"/>
		                <include name="org.**"/>
		                <include name="testes.**"/>
		              	<exclude name="br.com.meganet.telnet.**"/>
		              	<exclude name="br.com.meganet.util.Constantes"/>
		              	<exclude name="br.com.meganet.util.UtilFeriados"/>
		              	<exclude name="br.com.meganet.util.UtilMobile"/>
		              	<exclude name="br.com.meganet.util.Criptografia"/>
		              	<exclude name="br.com.meganet.util.HtmlTableGenerator"/>
		              	<exclude name="br.com.meganet.util.SendMailGMAIL"/>
		              	<exclude name="br.com.meganet.servicos.**"/>
		              	<exclude name="br.com.meganet.telnet.**"/>
		              	<exclude name="br.com.meganet.socket.Comando"/>
		              	<exclude name="br.com.meganet.socket.Mensagem"/>
		              	<exclude name="br.com.meganet.socket.RequesterSocket"/>
		              	<exclude name="br.com.meganet.socket.RequesterViaIntermediador"/>
		              	<exclude name="br.com.meganet.auditoria.BarraProgresso"/>
		              	<exclude name="br.com.meganet.conexoesBD.**"/>
		              	<exclude name="br.com.meganet.daoSQL.sql.**"/>
		              	<exclude name="br.com.meganet.exception.**"/>
		              	<exclude name="br.com.meganet.geradorCPF.**"/>
		              </patternset>
		            </package>
		            <class classes="public" methods="public" fields="public">
		              <patternset>
		                <include name="**"/>
		              	<exclude name="br.com.meganet.util.Constantes"/>
		              	<exclude name="br.com.meganet.util.UtilFeriados"/>
		              	<exclude name="br.com.meganet.util.UtilMobile"/>
		              	<exclude name="br.com.meganet.util.Criptografia"/>
		              	<exclude name="br.com.meganet.util.HtmlTableGenerator"/>
		              	<exclude name="br.com.meganet.util.SendMailGMAIL"/>
		              	<exclude name="br.com.meganet.servicos.**"/>
		              	<exclude name="br.com.meganet.telnet.**"/>
		              	<exclude name="br.com.meganet.socket.Comando"/>
		              	<exclude name="br.com.meganet.socket.Mensagem"/>
		              	<exclude name="br.com.meganet.socket.RequesterSocket"/>
		              	<exclude name="br.com.meganet.socket.RequesterViaIntermediador"/>
		              	<exclude name="br.com.meganet.auditoria.BarraProgresso"/>
		              	<exclude name="br.com.meganet.conexoesBD.**"/>
		              	<exclude name="br.com.meganet.daoSQL.sql.**"/>
		              	<exclude name="br.com.meganet.exception.**"/>
		              	<exclude name="br.com.meganet.geradorCPF.**"/>
		              </patternset>
		            </class>
		            <field name="serialVersionUID">
		              <patternset>
		                <include name="br.**"/>
		                <include name="img.**"/>
		                <include name="org.**"/>
		                <include name="testes.**"/>
		              </patternset>
		            </field>
		        </keep>
		    </rename>
		</yguard>
		 
		<!-- move nossas libs recém ofuscado volta para a área de lib -->
		<move todir="${projeto.pasta.origem}/WEB-INF/lib">
		    <fileset dir="${projeto.pasta.destino}" includes="*_obf.jar"/>
		</move>
		 
		<!-- descompactar o recem criado web.xml --> 
		<unzip dest="${projeto.pasta.origem}/WEB-INF/" src="${projeto.pasta.origem}/WEB-INF/lib/web.xml_obf.jar">
		    <patternset includes="web.xml"/>
		</unzip>
		<delete>
		    <fileset dir="${projeto.pasta.origem}/WEB-INF/lib" includes="web.xml*.jar"/>
		</delete>
		 
		<!-- rebuild o arquivo war -->
		<war destfile="${projeto.principal.dist}/claro_obf.war" basedir="${projeto.pasta.origem}"/>
		<delete file="${projeto.principal.diretorio}/yguardlog.xml" />
		<delete dir="${projeto.pasta.destino}" failonerror="no"/>
	</target>
</project>